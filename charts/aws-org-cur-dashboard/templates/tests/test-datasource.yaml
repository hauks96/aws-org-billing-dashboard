apiVersion: v1
kind: Pod
metadata:
  name: {{ include "common.fullname" . }}-test-datasource
  labels:
    {{- include "common.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  containers:
    - name: python
      image: python:3.11-slim
      command:
      - /bin/sh
      - -c
      - |
        pip install requests
        pip install pyyaml
        pip install pytest
        pytest /scripts/test_datasource.py --disable-warnings
      env:
        - name: GRAFANA_URL
          value: {{ .Values.test.grafana_url | quote }}
        - name: GRAFANA_USER
          value: {{ .Values.test.grafana_user | quote }}
        - name: GRAFANA_PASSWORD
          value: {{ .Values.test.grafana_password | quote }}
        - name: DATASOURCE_UID
          value: {{ .Values.datasource.uid | quote }}
        - name: DATASOURCE_FILE
          value: /datasource/datasource.yaml
        - name: VALIDATION_FILE
        {{- if and .Values.externalSecrets.enabled (eq .Values.externalSecrets.secretStore.kind "ClusterSecretStore") }}
          value: /validation/cluster_secret_store.yaml
        {{- else if and .Values.externalSecrets.enabled (eq .Values.externalSecrets.secretStore.kind "SecretStore") }}
          value: /validation/secret_store.yaml
        {{- else if .Values.externalSecrets.enabled }}
          {{- fail "value for .Values.externalSecrets.secretStore.kind must be either 'ClusterSecretStore' or 'SecretStore'" }}
        {{- else if (eq .Values.datasource.auth.type "keys") }}
          value: /validation/manual_key.yaml
        {{- else if (eq .Values.datasource.auth.type "credentials") }}
          value: /validation/manual_credentials.yaml
        {{- else if (eq .Values.datasource.auth.type "default") }}
          value: /validation/manual_default.yaml
        {{- end }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: validation
          mountPath: /validation
        - name: datasource
          mountPath: /datasource
  volumes:
    - name: scripts
      configMap:
        name: {{ include "common.fullname" . }}-test-scripts
        defaultMode: 0744
    - name: validation
      configMap:
        name: {{ include "common.fullname" . }}-validation-datasources
    - name: datasource
      secret:
        secretName: {{ include "common.fullname" . }}-athena-datasource
  restartPolicy: Never